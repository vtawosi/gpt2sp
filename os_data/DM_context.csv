"Key","Created","SP","Timespent","Title","Description"
"DM-228","2014/03/14 20:30:31","8.0","720.0","""Setup dev test environment""","""Setup whole Qserv environment, including installing data set, and validate it by running some simple queries. Suggest changes/improvements as appropriate."""
"DM-291","2014/03/21 18:02:36","10.0","240.0","""Investigate new XrdSsi interface""",""
"DM-702","2014/05/19 16:11:06","4.0","960.0","""Buildbot CI needs to save manifest file of failed build for later user debug""","""The manifest file created during a build instance is transient and removed as soon as the next build commences.  Due to that volatility, it's important to save the manifest to some well-known location so that the developer responsible for debug and repair can easily setup the failing environment. The location of the manifest file will be provided to the developer(s) in the failure notification."""
"DM-720","2014/05/21 13:30:01","20.0","2400.0","""Upgrade various external packages""","""I note that the LSST and HSC versions of external packages are slightly out of sync.  I propose uprevving the LSST packages to match as HSC has tested these versions.  {quote} cfitsio               3.360             HSC cfitsio               3310+2            sims Winter2014 current b4 b5 b6 b3 doxygen               1.8.2+2           sims b4 Winter2014 current b5 b6 b3 doxygen               1.8.5             HSC eigen                 3.1.1+2           Winter2014 current b5 b6 b3 b4 eigen                 3.2               HSC fftw                  3.3.2+2           Winter2014 current b5 b6 b3 b4 fftw                  3.3.3             HSC gsl                   1.15+2            Winter2014 current b5 b6 b3 b4 gsl                   1.16              HSC minuit2               5.22.00+2         Winter2014 current b5 b6 b3 b4 minuit2               5.28.00           HSC mysqlclient           5.1.65+3          Winter2014 current b5 b6 b3 b4 mysqlclient           5.1.73            HSC pyfits                3.1.2+2           sims b4 Winter2014 current b5 b6 b3 pyfits                3.2               HSC scons                 2.1.0+7           sims b4 Winter2014 current b5 b6 b3 scons                 2.3.0             HSC sqlite                3.7.14+2          Winter2014 current b5 b6 b3 b4 sqlite                3.8.2             HSC wcslib                4.14        wcslib                4.14+3            b4 Winter2014 current b5 b6 b3 xpa                   2.1.14+2          Winter2014 current b5 b6 b3 b4 xpa                   2.1.15            HSC {quote} """
"DM-875","2014/06/16 11:11:49","40.0","2400.0","""lsst_dm_stack_demo""","""lsst-dm_stack_demo has obsolete benchmark files (circa Release 7.0)  which fail to serve the purpose of validating, for the user, the correct functioning of a freshly built Release v8.0 stack.   At the very least,  the benchmark files should be regenerated for each official Release. Tasks:   (1) Build the benchmark files for Release v8.0  (2) Debate (a) recommending the  use of 'numdiff'  to check if the output is within realistic bounds.   Or, (b) develop another procedure to better show how the current algorithms compare to the algorithms used at the benchmarked Release. (3) Depending on result of the debate on #2: for: (a) provide appropriate 'numdiff' command invocation in manual.; for (b) implement the new procedure."""
"DM-951","2014/07/08 14:28:14","20.0","2400.0","""Add Doxygen documentation on rebuilds""","""Master-branch doxygen documentation should be rebuild on every full master build."""
"DM-956","2014/07/11 10:20:40","4.0","960.0","""Buildbot email should state if the build used master only or included other branches""","""Buildbot build status report currently doesn't state if the build was only for master or included other branches requested by the user."""
"DM-1018","2014/08/06 12:40:26","2.0","480.0","""Fix incorrect eupspkg config for astrometry_net""","""The clang patch from 8.0.0. version was (correctly) deleted. However, the patch identity was still left in the eupspkg config's protocol.  This will delete the last vestige of the formerly necessary clang patch."""
"DM-1241","2014/09/30 08:21:19","2.0","720.0","""Complete data entry of LSE-140 revised draft into EA""",""
"DM-1306","2014/10/06 02:13:06","2.0","60.0","""Pre-CCB review of LSE-140 docgen""",""
"DM-1358","2014/10/09 11:11:29","2.0","480.0","""End-to-end demo  fails to exit with the correct status  when Warning would be correct.""","""The output  of demo2012 results in an output file which is compared against a benchmarked file. Currently the comparison allows a deviation from the benchmark based """"on the the number of digits in the significands used in multiple precision arithmetic"""";  that  number is currently set to 11.  An example using that setting is: @ Absolute error = 5.9973406400e-1, Relative error = 9.1865836000e-4 ##2566    #:25  <== 29.7751550737 ##2566    #:25  ==> 29.7478269835  Additionally, the current use returns: a 'Fatal' error if the code itself fails to execute correctly; a """"Warning' error if the any of the benchmarked quantities do not meet the comparison criteria; 'Success' if the comparison meets all criteria.  It is noted that the buildbot 'Warning' color indicator is not currently being displayed when the comparison fails. That is a coding error.  This Issue will: * ensure that BUILDBOT_WARNING(S) causes the correct display color when appropriate.   This Ticket has been split into two parts. This is part 1.  Part 2 is DM-1379 """
"DM-3354","2015/07/31 13:46:06","2.0","480.0","""Read in the FITS cube that Herschel project produced""","""IRSA needs to be able to read in the FITS cube generated by Herschel project. We need to support and guide the effort so the code is generic enough for non-Herschel data. """
"DM-3414","2015/08/05 21:51:47","1.0","90.0","""Clarify status of LSE-77""","""Work on LSE-77 _per se_ appears not to have kept up with the status of the substance of the interface requirements, as represented in, for instance, LSE-239.  The action here is to see what change request actions may be appropriate for LSE-77 at this point."""
"DM-3777","2015/09/08 17:11:39","12.0","6.0","""server side preparation for  histogram plot (2)""","""1. On the initialization, server needs to return the following summary table for all numeric columns:       a. column name / description / unit      b. min and max values      c. number of points    2. For a given column and binning options, return the table of bins:     a. first column - numInBin - number of points in a bin     b. second column - binMin - bin's lower bound     c. third column - binMax - bin's upper bound     [10-13-15] Added by LZ  Here is the detailed requirement from Tatiana:  The implementation of this ticket are two search processors (similar to IpacTableFromSource search processor). Both search processors should be located in edu.caltech.ipac.firefly.server.query package and produce an IPAC Table.     1.  Getting table statistics    INPUT:  The input to the first search processor should be TableServerRequest (treq) with """"searchRequest"""" parameter set. The searchRequest parameter will be a serialized JSON string, which can represent a search request to any other search processor. This  parameter determines how the input IPAC table is  obtained. (The input IPAC table is produced similarly to how IpacTableFromSource produces the result with """"processor"""" parameter set.)    To parse SearchRequest parameter into key-value pairs - the parameters for the search request - you can use json.simple library:    JSONObject searchRequestJSON = (JSONObject)JSONValue.parse(treq.get(""""searchRequest""""));  if (searchRequestJSON != null) {      for (Object param : searchRequestJSON.keySet()) {          String name = (String)param;          String value = (String)searchRequestJSON.get(param);          }     }  One of the parameters should be the """"id"""" (ServerReuqest.ID_KEY) - which tells which search processor to use to obtain input IPAC table.    OUTPUT:  The output IPAC table produced by the first search processor should contain 5 columns: columnName, description, unit (unit or empty string), min, max, numPoints (the number of non-null values).    2.  Getting histogram data    INPUT:  The input to the second processor should be TableServerRequest (treq) with """"searchRequest"""" parameter set (exactly the same as """"searchRequest"""" parameter in item 1) plus binningOptions. The binningOptions parameter will be serialized JSON object with the following keys (object properties):  {  """"algorithm"""" : """"fixedSizeBins"""",          """"binSize"""" : 20,          """"column"""" : """"wavelength"""",          """"scale"""" : """"linear"""",          """"min"""" : 0,          """"max"""" :100  }    Notes:   -the algorithm is simple fixed size binning for now, in future we'll need to add variable size bins algorithm described here: http://www.astroml.org/examples/algorithms/plot_bayesian_blocks.html  - at the beginning, you can assume that column is column name, but it can be an expression based on several columns.   - scale can be """"linear"""" or """"log""""  - min and max define filter on the points included into histogram calculation, any of them or both can be absent. If both are absent, no filter needs to be applied.    OUTPUT:  The output IPAC table produced by the second search processor should contain 3 columns:  numInBin, binMin, binMax in that order. The table should be sorted by binMin. The binMax of row i should be always less or equal to binMin of row i+1. If number of points in the bin is 0, it's OK to skip this bin.    """
"DM-4313","2015/11/11 12:19:33","3.5","600.0","""Configure sshd with pam_krb5 and document""","""Configure sshd in our test IAM VM to use pam_krb5 so the user gets a Kerberos ticket when logging in as discussed in our design doc. Document the configuration steps."""
"DM-4315","2015/11/11 12:27:43","2.0","750.0","""Set up test IAM MariaDB instance with Kerberos""","""Install MariaDB in our test IAM VM at NCSA and configure it for Kerberos password authentication. I understand that Kerberos ticket authentication is not yet supported by MariaDB. Document the process and include references to the ongoing work to add Kerberos ticket support.    Create example tables that demonstrate access control for different logged in users."""
"DM-4317","2015/11/11 12:42:40","4.0","360.0","""Configure httpd with SSL and mod_krb5 in IAM test VM""","""Get SSL certificate and configure httpd for mod_auth_krb5 authentication in IAM test VM. Document the setup."""
"DM-4442","2015/11/30 03:09:57","1.25","300.0","""IAM process for granting data access rights""","""Document a process for granting of data access rights to LSST users according to the Data Access White Paper ([Doc-53733|http://ls.st/Document-5373]).    On the wiki: https://confluence.lsstcorp.org/display/LAAIM/Granting+Data+Access+Rights"""
"DM-4671","2015/12/15 15:29:27","5.5","600.0","""configure WebDAV with Kerberos/LDAP on lsst-auth1""","""Configure WebDAV for Kerberos authentication and LDAP authorization. Create example subdirectories where LDAP groups determine access (using .htaccess files):  * lsst: anyone in lsst group can read/write to this directory  * ncsa: anyone in all_ncsa_employe can write, anyone in lsst can read"""
"DM-5166","2016/02/17 13:31:10","6.0","240.0","""Analyze catalog-comparison CmdLineTasks""","""Analyze the QA CmdLineTask collection being generated by [~lauren] sufficiently well to determine the interface requirements needed to represent them as Supertasks.    Does not include actually designing that interface."""
"DM-6933","2016/07/12 17:19:40","4.0","300.0","""Create access policy for PDAC""","""This is a Prototype DAC (PDAC) and the access to it is limited. We need to draft a access policy. """
"DM-9336","2017/02/08 13:23:41","2.0","240.0","""Complete LCR-836 (typographic correction to LSE-69)""","""LCR-836 (already created) is for a long-pending typographic correction to LSE-69 to get it to match LSE-130's section headings.    The work on this ticket is to prepare the new docgen and submit it to the CCB. """
"DM-11059","2017/06/27 15:13:41","3.0","60.0",""" Gather schemas""","""Gather schemas for all databases within the consolidated database"""
"DM-11081","2017/06/28 13:44:26","5.0","60.0","""Refine lsst-db refresh plan""","""Refine initial lsst-db plans based on review of initial plan. Work with vendors to get necessary quotes."""
"DM-13225","2018/01/12 13:20:59","2.0","540.0","""Edit SuperTask requirements for order-independence""","""MagicDraw enforces alphabetic order for requirements (within a package).  This makes it impossible to define the order of the requirements as they appear.    The existing SuperTask requirements in LDM-556 were written without realizing this and contain references to previous requirements as """"above"""".    It is desirable for requirements to be meaningful in isolation in any event, so this task is to clean up the language and avoid positional references."""
"DM-13838","2018/03/19 08:07:35","4.0","930.0","""Submit LSP Design document LDM-542 to DM-CCB for approval""","""Apply final polish and submit."""
"DM-13864","2018/03/21 11:00:13","2.0","540.0","""Submit LSP Test Specification document LDM-540 to DM-CCB for approval""","""Apply final polish and submit."""
"DM-19543","2019/04/29 22:47:00","2.0","360.0","""Evaluate LSP review committee's recommendations and map to LIT tickets""","""Review the recommendations in the LSP review report, flatten the structure so that 1 item can be mapped to 1 LIT ticket.      """
"DM-19545","2019/04/29 22:50:54","6.0","240.0","""Propose responses to LSP review charge questions""","""In conjunction with the LSP meta-CAM, devise responses to the LSP review recommendations to see if there are additional important points or areas of concern that should be captured as LIT tickets or raised to senior management and the LSP team. """
"DM-19849","2019/05/22 21:46:06","1.0","600.0","""Make ATSpectrograph configurable""","""This task also includes adding the INSTPORT keyword as well as the WCS keywords that are specific to the instrument (pixel/plate scale)."""
"DM-21034","2019/08/21 05:34:13","1.0","600.0","""Update Environment CSC to salobj 4 and make is a Configurable CSC""","""Environment CSC (e.g. Weather Station) need to be upgraded to a Configurable CSC and to salobj 4. """
"DM-21489","2019/10/02 00:58:23","4.0","3360.0","""white light + chiller lab testing ""","""begin lab testing with chiller and white light source, plus address issues we discover"""
"DM-21694","2019/10/08 17:45:07","8.0","240.0","""Write an MT rotator CSC in Python""","""Write an MT rotator CSC in Python, including a basic simulation mode.    Note that the simulator is the hard part. I plan to start with a very elementary model (no slewing) in this ticket, then refine it in another ticket."""
"DM-21732","2019/10/11 16:41:13","3.0","960.0","""Test the Updated Middleware with Bare Rotator""","""Test the software with the bare rotator in SLAC. The followings are my plan there:    1. To be familiar with the rotator behavior by some simple SAL commands by the original SAL version 3.5.1.    2. Install the SAL 3.10.0 and update middleware code in the mangement PC. In this step, I will need to stop the running middleware (in SAL 3.5.1) and backup the data in """"/nfsdemo"""" directory.    3. Test the rotator hardware behavior by SAL 3.10.0 and do the record. If there is any document of rotator behavior recorded already in SLAC, I will be happy to read. I also want to talk to the users of rotator to see there is any bug found or not. This should be recorded and fixed in the following update.    4. Discuss with the developer of CCS to see how the CCS works with the rotator. Since I might be one of the client of CCS (I am responsible of the active optics), I do want to know how the CCS works."""
"DM-21741","2019/10/12 01:30:08","1.0","720.0","""Improvements on attcs class""","""Implement some improvements to ATTCS class with lessons learned on recent Auxiliary Telescope on-sky activities. """
"DM-21742","2019/10/12 01:31:37","2.0","960.0","""Write Auxiliary Telescope operations documentation.""","""Write initial version of Auxiliary Telescope operations manual. """
"DM-21743","2019/10/12 02:18:26","1.0","480.0","""Deploy watcher on Tucson test stand and in the summit""","""Deploy Watcher on the Tucson test stand and on the summit this task involves:          1 - writing configuration for the watcher on the lab     2 - updating watcher configuration for the summit with all required rules     3 - build container for the watcher     4 - make compose file to deploy watcher on both locations     5 - Update compose file for salkafka producer to add watcher on the list of CSCs               """
"DM-21756","2019/10/14 20:31:17","2.0","960.0","""Revamp Electrometer CSC to use salobj 4""","""Revamp the Electrometer CSC to use salobj 4. CSC needs a rewrite to comply with TSSW python standards."""
"DM-21780","2019/10/15 00:25:10","1.0","240.0","""Make a few simple scripts that exercise the MT Rotator and Hexapod""","""Make a few simple command-line scripts that exercise the MT Rotator by talking to the Rotator CSC. This is intended to help [~ttsai] shake out the MT Rotator at SLAC, especially my new Python CSC."""
"DM-21796","2019/10/15 22:18:47","1.0","480.0","""Support testing the rotator at SLAC""","""This ticket is intended to capture my effort supporting Te-Wei's testing of the rotator at SLAC."""
"DM-21812","2019/10/17 11:37:42","2.0","960.0","""Shadow Rob for M1M3 testing""","""Learn to be Robs replacement for M1M3 as he leaves before it will be complete."""
"DM-22016","2019/10/29 22:04:41","1.0","960.0","""Deploy xml 4.4 on Tucson Test Stand. ""","""Ticket to track work for deployment on Tucson Test Stand. """
"DM-22254","2019/11/18 19:25:38","2.0","540.0","""File LCR to address LIT-292, removal of """"LSSTC Board"""" language in LSR and OSS; flowdown to DMSR""","""Refer to LIT-292 for the substance."""
"DM-23058","2020/01/14 14:00:19","2.0","960.0","""HVAC XML to MQTT""","""Create XML SAL bindings for the MQTT telemetry subset."""
"DM-23155","2020/01/22 20:25:44","1.0","480.0","""Add XML tests to verify a topic does not contain special characters""","""The XML topic and attribute names should only contain letters, underscores and maybe numbers.  Create a test to validate this is true."""
"DM-23182","2020/01/24 16:42:21","2.0","960.0","""Add basic IDL Type test""","""Currently there is no test to verify that the IDL Type is present, nor if it contains a valid value if it is."""
"DM-23246","2020/01/30 18:22:07","3.0","480.0","""Provide basic English Description based on Spanish MQTT Topic names""","""The MQTT topic names are all in Spanish which may be confusing for non-Spanish speaking people. It was decided to keep the Spanish topic names since mechanics generally are Chilean so it will be easier for them to identify the hardware components when they are referred to in Spanish. In addition English Descriptions will be added for those who don't understand Spanish well enough. The Descriptions will be direct translations of the Spanish words into English without an attempt to form proper sentences."""
"DM-23533","2020/02/17 13:56:55","1.0","480.0","""Create XML files with proposed command protocol""","""For the commanding from the upper level DCS to the lower level components a proposal needs to be made for both the communications and the command protocols. The basis for the commands will be XML files that will be used by both the Rubin Observastory and EIE. This story is for collecting the necessary commands and creating an XML file to share between both parties."""
"DM-23842","2020/03/11 16:17:29","2.0","960.0","""Add additional SALOBJ functions to the Dome CSC""","""Now that SALOBJ has been added to the project, it is time to implement the azimuth motion control commands."""
"DM-23844","2020/03/11 17:35:30","1.0","240.0","""Make sure that the reply to the STATUS command is in line with the proposed communications protocol""","""The current implementation of the mock controller doesn't exactly follow the proposed communications protocol. Fix please."""
"DM-23933","2020/03/19 18:05:49","3.0","960.0","""Produce and consume communication strings with YAML""","""We are still reviewing the use of YAML in stead of using plain semi-colon separated strings for the communication between the upper and lower level components but I am going ahead and will start implementing YAML already since this is the way we will go.    EDIT: YAML has been accepted as the preferred communications protocol."""
"DM-23954","2020/03/20 15:12:44","5.0","960.0","""Error handling while initializing M1M3 support""","""There isn't any error handling. The process in best cause core dump when some configuration file is missing, in worst case my understanding is it might end up with wrong configuration. This needs to be fixed."""
"DM-23993","2020/03/24 18:11:27","1.0","60.0","""Correct sending of OK reply in mock_controller""","""The OK reply sent from the mock_controller lacks a space right before the Timeout keyword."""
"DM-23997","2020/03/24 18:42:58","1.0","60.0","""Consolidate assertComponent and assertOK functions into one assertReply function""","""Since the structure of each reply received from the mock controller is similar, it is possible to have one assert method for each kind of reply instead of dedicated ones."""
"DM-24038","2020/03/27 16:55:52","2.0","240.0","""Read DIMM documentation""","""Received the latest DIMM documents and will read them."""
"DM-24039","2020/03/27 17:00:19","1.0","480.0","""Inspect current situation regarding M2 hexapod thermal sensors""","""Get familiarized with the M2 hexapod thermal sensors hardware."""
"DM-24040","2020/03/27 17:11:30","2.0","960.0","""Start implementing M2 hexapod thermal sensors CSC""","""Start implemeting the CSC that publishes the telemetry into the EFD."""
"DM-24041","2020/03/27 17:15:19","2.0","960.0","""Implement commanding the lower level components""","""Make sure that the upper level DCS can command the lower level components."""
"DM-24042","2020/03/27 17:19:12","2.0","480.0","""Implement connect and disconnect functions in DCS""","""Make sure that the DCS can connect to and disconnect from the lower level components. Use the mock controller at first and make sure that it later can switch to the real CRIO."""
"DM-24387","2020/04/08 18:20:09","1.0","480.0","""Refactor duplicate code and add a task scheduler""","""There is some duplicate code in particularly the test code. Review and refactor. Also a task scheduler is needed to poll the status command on a regular basis. Add it."""
"DM-24406","2020/04/09 05:36:05","3.0","4020.0","""M1M3 hardware simulator""","""Run M1M3 cRIO with ICL hardware simulator."""
"DM-24468","2020/04/14 15:46:09","3.0","960.0","""Poll lower level status and send telemetry""","""Introduce a polling mechanism for the lower level statuses and emit telemetry."""
"DM-24469","2020/04/14 15:49:11","1.0","240.0","""Review Dome Software Timeline""","""Review the Dome Software Timeline and bring it in line with the current status and the expected the development progress."""
"DM-24520","2020/04/20 17:20:00","1.0","480.0","""LTS-646 review""","""Review and update LTS-646 (there is at least misleading reference to Modbus-ida.org)."""
"DM-24572","2020/04/23 17:33:18","2.0","960.0","""Install raspberry pi disk image for cloud sensor""","""Garry Knight has prepared a raspberry pi disk image which needs to be installed."""
"DM-24574","2020/04/23 17:46:28","3.0","2400.0","""Add all commands to DCS""","""Make sure that the DCS can accept all commands and that the mock controller returns sensible replies."""
"DM-24610","2020/04/27 18:41:41","3.0","2520.0","""Assign the OFC state0 in ts_MTAOS by Configuration File ""","""Assign the OFC (Optical Feedback Control) state0 in ts_MTAOS by configuration file. The *ConfigurableCsc* class in ts_salobj is the basic CSC (Commendable SAL Component) class for the subsystem such as *MtaosCsc* in ts_MTAOS to use. The configuration file is located at MTAOS directory of ts_config_mttcs. The following document explains the details of this: [TSTN-017|https://tstn-017.lsst.io/]. When writing the configuration file, a schema is needed to verify the configuration file based on: [Write a CSC|https://ts-salobj.lsst.io/salobj_cscs.html#writing-a-csc].    OFC is the component that calculates the correction of mirror bending mode and hexapod position. The control algorithm in use can follow [Real time wavefront control system for the Large Synoptic Survey Telescope (LSST)|https://drive.google.com/file/d/1RyMQWeXWRZLtxM8KkSwtB3STzMM9fCvX/view?usp=sharing] and [Control Algorithm in Optical Feedback Control|https://confluence.lsstcorp.org/display/LTS/Control+Algorithm+in+Optical+Feedback+Control]. The state0 (*s*~*0*~ in the [Control Algorithm in Optical Feedback Control|https://confluence.lsstcorp.org/display/LTS/Control+Algorithm+in+Optical+Feedback+Control]) is an intentional parameter used in *x00* reference, which is explained in the above links.    The AOS software contains the simulation code and control code. For the simulation, the user needs to use the repos: ts_wep, ts_ofc, and ts_phosim. For the control code, the user needs to use the repos: ts_wep, ts_ofc, and ts_MTAOS. The ts_phosim is not needed in the control and the ts_MTAOS is not needed in the simulation. In this task, we focus on the control code.    The followings are the steps in this task:   # Update the [default.yaml|https://github.com/lsst-ts/ts_config_mttcs/blob/develop/MTAOS/v1/default.yaml] in ts_config_mttcs to contain the state0 information as the following: [state0inDof.yaml|https://github.com/lsst-ts/ts_ofc/blob/master/policy/comcam/state0inDof.yaml]. I prefer to have two yaml files (default.yaml + state0inDof.yaml) instead of one (default.yaml) in ts_config_mttcs. However, we need to check ts_salobj can support this or not.   # Provide the related schema: [MTAOS.yaml|https://github.com/lsst-ts/ts_MTAOS/blob/master/schema/MTAOS.yaml] in ts_MTAOS/schema directory. Prefer to have two files instead of one. But this depends on the implementation of ts_salobj.   # Update *MtaosCsc* class in ts_MTAOS to read the configuration of state0. *MtaosCsc.configure()* will read the configuration file from SAL. *ConfigByObj* and *ConfigByFile* classes inherit from *ConfigDefault* to read the data. We need to update the related test cases to make sure the *MtaosCsc* can change the state0 by SAL or file.   # Override the default state0 when *OFCCalculation* is instantiated by *OFCCalculationFactory.getCalculator()* in *Model.ofc*. The state0 is stored in the internal data of *Model.ofc.ztaac.optCtrl*. The developer can do *OFCCalculation.getZtaac()* to get the *ztaac* attribute. After this, the developer can use *ZTAAC.setState0()* to set the state0 values. The related *get()* functions are provided for the test. By default, the state0 is set by *OFCCalculation()* --> *OFCCalculation._configZTAAC()* --> *ZTAAC.setState0FromFile()*. It is noted that we will keep the default state0 file in ts_ofc for the simulation (the AOS simulation does not know the ts_MTAOS. The UW team is using the AOS simulation to help the algorithm development)   # Update the test cases and [versionHistory.rst|https://github.com/lsst-ts/ts_MTAOS/blob/master/doc/versionHistory.rst] to reflect the change."""
"DM-24770","2020/05/07 07:04:24","3.0","660.0","""Issues found in M1M3 component""","""While testing the M1M3 component at NCSA I noticed a couple things that needs fixing. These are mostly related to the SAL component behavior so, as far as I understand, it should apply to the component as a whole and not only the simulator.          1 - Component crashes if it doesn't find configuration file during start command.       Expected behavior: If I send a start command a {{settingsToApply}} that is not valid the CSC should reject the command with ack = {{CMD_FAILED: -302}} and stay in STANDBY.      Current behavior: component core dumps.   {code:java}  m1m3                  | [2020-05-06 20:20:57.811] [loggername] [info] DigitalInputOutput: turnCellLightsOn()  m1m3                  | [2020-05-06 20:20:57.812] [loggername] [info] DigitalInputOutput: turnAirOn()  m1m3                  | [2020-05-06 21:04:15.490] [loggername] [info] StandbyState: start()  m1m3                  | [2020-05-06 21:04:15.490] [loggername] [info] Model: loadSettings(foo)  m1m3                  | [2020-05-06 21:04:15.490] [loggername] [info] Model: Loading ILC application settings  m1m3                  | [2020-05-06 21:04:15.491] [loggername] [info] Model: Loading force actuator application settings  m1m3                  | [2020-05-06 21:04:15.493] [loggername] [info] Model: Loading force actuator settings  m1m3                  | terminate called after throwing an instance of 'std::runtime_error'  m1m3                  |   what():  Cannot load /home/saluser/ts_m1m3support/SettingFiles/Sets///ForceActuatorSettings.xml: File was not found  m1m3                  | /home/saluser/.setup.sh: line 5:     9 Aborted                 (core dumped) /home/saluser/ts_m1m3support/ts_M1M3Support -c /home/saluser/ts_m1m3support/SettingFiles  {code}            2 - Component is not doing state transitions appropriately. The only transition that the CSC is performing is going from STANDBY to DISABLE. After that it is not possible to take to any other state, not even back to STANBY. Also, it is acknowledging the commands as complete but are not executing them.     I am attaching a script that will reproduce the problem. This is an example output:  {code:java}  Initial state is <State.STANDBY: 5> expected <State.STANDBY: 5>  got 303 expected 303  Next state is <State.DISABLED: 1> expected <State.DISABLED: 1>  got 303 expected 303  Timed out waiting for summary state. Expected <State.ENABLED: 2>  got 303 expected 303  Timed out waiting for summary state. Expected <State.DISABLED: 1>  got 303 expected 303  Timed out waiting for summary state. Expected <State.STANDBY: 5>{code}  3 - Component not rejecting commands when in STANDBY or DISABLED.    When sending commands for the CSC in standby it should reject the commands with ack=<SalRetCode.CMD_FAILED: -302>, instead it is accepting the commands with 303.     I'm attaching a script that will reproduce the problem. This is an example output.   {code:java}  Create domain  Create remote for M1M3  Initial state is <State.STANDBY: 5> expected <State.STANDBY: 5>  Testing command abort...  got msg='Timed out waiting for command acknowledgement', ackcmd=(ackcmd private_seqNum=26072628, ack=<SalRetCode.CMD_NOACK: -301>, error=0, result='No command acknowledgement seen')  Testing command abortProfile...  got 303 expected -302  Testing command abortRaiseM1M3...  got 303 expected -302  Testing command applyAberrationForces...  got 303 expected -302  Testing command applyAberrationForcesByBendingModes...  got 303 expected -302  Testing command applyActiveOpticForces...  got 303 expected -302  Testing command applyActiveOpticForcesByBendingModes...  got 303 expected -302  Testing command applyOffsetForces...  got 303 expected -302  Testing command applyOffsetForcesByMirrorForce...  got 303 expected -302  Testing command clearAberrationForces...  got 303 expected -302  Testing command clearActiveOpticForces...  got 303 expected -302  Testing command clearOffsetForces...  got 303 expected -302  Testing command disable...  got 303 expected -302  Testing command disableHardpointChase...  got 303 expected -302  Testing command disableHardpointCorrections...  got 303 expected -302  Testing command enable...  got 303 expected -302  Testing command enableHardpointChase...  got 303 expected -302  Testing command enableHardpointCorrections...  got 303 expected -302  Testing command enterControl...  got msg='Timed out waiting for command acknowledgement', ackcmd=(ackcmd private_seqNum=809273431, ack=<SalRetCode.CMD_NOACK: -301>, error=0, result='No command acknowledgement seen')  Testing command enterEngineering...  got 303 expected -302  Testing command exitControl...  got msg='Timed out waiting for command acknowledgement', ackcmd=(ackcmd private_seqNum=937073474, ack=<SalRetCode.CMD_NOACK: -301>, error=0, result='No command acknowledgement seen')  Testing command exitEngineering...  got 303 expected -302  Testing command lowerM1M3...  got 303 expected -302  Testing command modbusTransmit...  got 303 expected -302  Testing command moveHardpointActuators...  got 303 expected -302  Testing command positionM1M3...  got 303 expected -302  Testing command programILC...  got 303 expected -302  Testing command raiseM1M3...  got 303 expected -302  Testing command resetPID...  got 303 expected -302  Testing command runMirrorForceProfile...  got 303 expected -302  Testing command setLogLevel...  got msg='Timed out waiting for command acknowledgement', ackcmd=(ackcmd private_seqNum=1366699677, ack=<SalRetCode.CMD_NOACK: -301>, error=0, result='No command acknowledgement seen')  Testing command setThermalSetpoint...  got msg='Timed out waiting for command acknowledgement', ackcmd=(ackcmd private_seqNum=1410333065, ack=<SalRetCode.CMD_NOACK: -301>, error=0, result='No command acknowledgement seen')  Testing command setValue...  got msg='Timed out waiting for command acknowledgement', ackcmd=(ackcmd private_seqNum=1470788897, ack=<SalRetCode.CMD_NOACK: -301>, error=0, result='No command acknowledgement seen')  Testing command shutdown...  got 303 expected -302  Testing command standby...  got 303 expected -302  Testing command stopHardpointMotion...  got 303 expected -302  Testing command testAir...  got 303 expected -302  Testing command testForceActuator...  got 303 expected -302  Testing command testHardpoint...  got 303 expected -302  Testing command translateM1M3...  got 303 expected -302  Testing command turnAirOff...  got 303 expected -302  Testing command turnAirOn...  got 303 expected -302  Testing command turnLightsOff...  got 303 expected -302  Testing command turnLightsOn...  got 303 expected -302  Testing command turnPowerOff...  got 303 expected -302  Testing command turnPowerOn...  got 303 expected -302  Testing command updatePID...  got 303 expected -302  {code}   """
"DM-24776","2020/05/07 17:58:05","2.0","480.0","""Create a function that takes the dome command to be executed and its parameters""","""Create a function that takes the command and its parameters and returns a yaml representation of it so all do_XXX functions in DCS can be simplified."""
"DM-24790","2020/05/07 22:46:57","2.0","480.0","""Add documentation for DCS""","""Update index.rst with a description of DCS."""
"DM-24805","2020/05/08 23:30:41","1.0","540.0","""Build the Latest MTAOS Docker Image to Deploy on NCSA""","""Build the latest MTAOS docker image to contain the update of DM-24422, DM-24423, and DM-24610 to deploy on NCSA. AOS needs the upstream packages of *lsst-distrib* and *lsst-sims*. The available version (tag) can follow [tags|https://eups.lsst.codes/stack/src/tags/]. The T&S team uses the weekly built in the most case. For the *lsst-distrib*, the latest available tag is *w_2020_18*. For the *lsst-sims*, the latest available tag is *sims_w_2020_16*. To install these two packages together, we need to make sure to use the same weekly built tag.    The T&S team releases the available development image ([develop-env|https://hub.docker.com/repository/docker/lsstts/develop-env]) regularly. The latest formal tag is *b68*, which has the *lsst-dev* *w_2020_16* installed already. It is noted that we do not use the *latest* tag usually. In this task, we will begin from this docker image to build the image of MTAOS (the latest one now is using *w_2020_15*). The followings are the steps:   # Update the [aos_sal|https://github.com/lsst-ts/ts_Dockerfiles/tree/develop/aos_sal] image to use the *lsstts/develop-env:b68* and publish as [aos_sal|https://hub.docker.com/repository/docker/lsstts/aos_sal] on Docker hub. This image installs the *lsst-sims* and other needed packages for AOS to use.   # Update the [aos_aoclc|https://github.com/lsst-ts/ts_Dockerfiles/tree/develop/aos_aoclc] image to use the latest AOS packages and publish as [aos_aoclc|https://hub.docker.com/repository/docker/lsstts/aos_aoclc] on Docker hub.   # Update the [mtaos_sim|https://github.com/lsst-ts/ts_Dockerfiles/tree/develop/mtaos_sim] image to use the latest ts_MTAOS package and publish as [mtaos_sim|https://hub.docker.com/r/lsstts/mtaos_sim] on Docker hub.   # Deliver to Tiago to deploy the image on NCSA for the test."""
"DM-24831","2020/05/11 19:17:54","1.0","480.0","""Check out DIMM code and read through it""","""Check out the DIMM code from GitHub and read through it."""
"DM-24838","2020/05/11 20:32:53","3.0","900.0","""Replace boot and shutdown commands with enter/exitControl""","""M1M3 SS uses boot and shutdown commands for what nowadays shall be done with enterControl and exitControl generic SAL commands. Replace boot and shutdown commands with generic enter/exitControl. Enforce their functionality (if possible) by actually stopping and restarting HW threads on exit/enter."""
"DM-24934","2020/05/14 18:40:59","1.0","480.0","""Clarify the meaning of CW/CCW/UP/DOWN and whether a velocity may be negative""","""Make sure that it is clear what CW/CCW/UP/DOWN in the Dome commands XML in SAL mean and make sure that it is stated in the description of the crawl commands. Also make sure that negative velocities are rejected?"""
"DM-24982","2020/05/19 16:02:38","1.0","480.0","""Install raspis and sensors at home and flash HD card""","""Two raspberry pi's are installed at the Recinto with temperature and cloud sensors attached to them. Pick them up, set them up at home and flash the SD card of the raspberry pi 4 with the latest image provided by Garry."""
"DM-25064","2020/05/26 17:07:54","3.0","780.0","""Tests for PID in M1M3""","""Tests for PID code inside M1M3 SS. C++ code to verify PID functionality, look for possible runaways scenarios."""
"DM-25074","2020/05/26 21:32:55","2.0","480.0","""Add more useful info to the documentation""","""The current Dome documentation is pretty thin. Add more useful info, add version info and create a release.    Also, make sure that the flake8 line length is set to 79 characters."""
"DM-25130","2020/05/28 21:33:26","2.0","960.0","""Replace YAML with JSON when sending commands from and receiving replies in the Dome CSC.""","""In the weekly Dome Software Meeting of 2020-05-28 it was decided to replace YAML with JSON when sending commands from and receiving replies in the Dome CSC. This ticket will take care of that and will also make sure that there will be a central function to construct the commands (in the Dome CSC) and replies (in the mock_controller simulator) that does this so a possible future technology switch could be done more easily."""
"DM-25188","2020/06/02 15:46:26","1.0","840.0","""Sends modbus commands from M1M3cli""","""Add the ability to M1M3cli app to send Modbus commands to ILC. That will enable execution and debugging of connections with ILCs."""
"DM-25189","2020/06/02 17:30:59","2.0","3360.0","""Make sure that DCS handles 0/360 azimuth and 0/90 elevation boundaries properly""","""Currently the azimuth rotation doesn't handle the 0/360 azimuth and 0/90 elevation boundaries at all. It will just move to negative (in case of the 0 boundary) or too large (in case of the 360 and 90 boundaries) values. Please fix."""
"DM-25217","2020/06/03 17:40:09","2.0","480.0","""Reinstall CentOS and document all steps""","""Now that CentOS is running on the RPi4, reinstall it and document all steps. The document can be found at    [https://confluence.lsstcorp.org/display/LTS/Installation+instructions+CentOS+7+on+Raspberry+Pi+4]"""
"DM-25230","2020/06/04 03:18:08","4.0","600.0","""M1M3 send bits fix""","""Send bits aren't reported from FPGA. The reason is unknown."""
"DM-25250","2020/06/04 23:39:28","2.0","960.0","""Adjust DCS and the mock controller to the new JSON protocols and LLC states and statuses""","""In the Dome Software Meeting of 2020-06-04 new JSON-based command and configuration protocols were agreed upon, as well as new LLC states and statuses. This ticket is to make the necessary changes to the Dome CSC and mock controller to adopt those changes.    Protocol details, with mention to the response codes, can be found here    https://confluence.lsstcorp.org/display/LTS/Command+and+Configuration+Protocols"""
"DM-25308","2020/06/08 15:45:46","2.0","480.0","""Change Health & Status data to direct FIFO""","""Health & Status data are routed in FPGA through the Request queue. The 64bit data are then squeezed into 4 16bit Response FIFO values. This design is suboptimal for two reasons:   * response queue is also used to send Modbus responses from ILCs, the mix effectively prevents multi-threading on CPU (Host) side to query H&S data and responses at the same time   * as H&S data are mixed with responses, it's hard to tell which data on reposne queue are from H&S and which are from ModBus - that is probably reason why vital H&S collection was implemented in FPGA, but not in C/C++ controller (where it most likely never worked)"""
"DM-25357","2020/06/10 20:37:48","1.0","480.0","""Create CentOS SD image with SAL for Raspberry Pi 4""","""Create CentOS SD image with SAL for Raspberry Pi 4 for future use."""
"DM-25374","2020/06/11 18:48:36","4.0","720.0","""Change M1M3 HW Simulator FPGA""","""Current simulator FPGA code wasn't touched from 2018. After what appears as changes into simulator cRIO modules, the code wasn't updated and most likely the new incarnation of the simulator wasn't run. The purpose of this task is to make sure the simulator can at least answer ILCs (Modbus) requests."""
"DM-25465","2020/06/18 22:14:56","1.0","480.0","""Thoroughly inspect ESS code and form API proposal""","""In order to be able to use the ESS CSC as a generic CSC for all kinds of sensors, the existing ESS code needs to be inspected so an API can be extracted. This issue is for doing the inspection and for forming an API proposal."""
"DM-25491","2020/06/19 19:25:51","2.0","960.0","""Command all sky camera using GPhoto""","""Use the Python bindings for libgphoto2 and the GenericCamera CSC to command the all sky camera."""
"DM-25492","2020/06/19 19:31:24","2.0","720.0","""Integrate ESS code in ESS CSC""","""Take the ESS code that reads the sensors and integrate it into the ESS CSC code."""
"DM-25519","2020/06/22 15:30:53","1.0","210.0","""clang-format M1M3 support code""","""M1M3 C++ code is written in Eclipse, using Eclipse tab-based formatting. That contradicts to DM recommended clang-format. I am reformatting single files if I do significant changes, but time has come to reformat the whole.    Lets couple that with Github action to check for clang-format."""
"DM-25758","2020/07/01 05:20:10","1.0","480.0","""Adjust DCS and the mock controller to a change in the configuration protocol""","""A small change has been introduced in the configuration protocol: all values need to be arrays."""
"DM-25762","2020/07/01 10:52:21","2.0","960.0","""Move Dome CSC documentation on Confluence to .rst files""","""There is a lot of documentation related to the Dome CSC and the communication with the Lower Level Components on Confluence. This ticket is to migrate the relevant documents to .rst files."""
"DM-25764","2020/07/01 11:25:40","1.0","480.0","""Review ESS XML and add timestamps if necessary""","""Review the ESS telemetry topics and add a timestamp if there isn't already one."""
"DM-25892","2020/07/10 14:04:56","1.0","480.0","""Modernize GenericCamera code and unit tests""","""The unit tests of GenericCamera still make use of the old Harness infrastructure. This is not needed anymore. This ticket aims to replace that with a more modern CSC test approach."""
"DM-25997","2020/07/17 18:51:38","4.0","840.0","""Document M1M3 states""","""M1M3 states aren't described in the code and there seems to be lack of any documentation. Purpose of this task is to review the state, document them and propose changes to align with the current SAL implementation."""
"DM-26013","2020/07/20 17:24:36","1.0","480.0","""Check SALSubsystems.XML file for attributes for several subsystems""","""This page    [https://confluence.lsstcorp.org/display/LTS/SALSubsystem+Attributes]    describes the attributes of all subsystems in SAL. Check the attributes for the following projects and correct them if necessary:   * Dome   * EAS   * ESS   * HVAC"""
"DM-26055","2020/07/22 11:47:15","2.0","960.0","""Install GenericCamera CSC on raspberry pi3 and make the camera work with it""","""Now that the raspberry pi 3 with the Canon all-sky camera is up and running at the Recinto, it is time to install the CSC on it and get it working with the camera."""
"DM-26089","2020/07/24 16:07:09","1.0","480.0","""Install ESS CSC on the raspberry pi 4""","""Install the ESS CSC on the raspberry pi 4 running CentOS 7 and make sure that it can be started. Also update the installation guidelines with the necessary steps."""
"DM-26097","2020/07/24 22:07:16","1.0","480.0","""Add conda build files to several projects""","""General reminder to add Jenkins conda build files to   * HVAC   * GenericCamera   * ESS   * MTEEC   * EAS   * Dome   * ..."""
"DM-26225","2020/08/04 12:28:12","1.0","480.0","""Integrate ESS USB code in ESS CSC""","""The ESS code has been adjusted to support a single USB device. Integrate that code into the CSC."""
"DM-26232","2020/08/04 19:17:17","1.0","960.0","""Command ESS CSC using an external python script""","""Now that the basic ESS CSC is done, it needs to be commanded as well. In order to test that functionality, create an additional python script and command the CSC with that."""
"DM-26250","2020/08/05 16:40:41","2.0","480.0","""Modernize MTEEC GitHub repo, code and unit tests""","""The MTEEC GitHub repo is very much outdated and needs to be modernized. This also is true for the code and unit tests. Please fix this all."""
"DM-26251","2020/08/05 16:42:07","2.0","480.0","""Modernize EAS GitHub repo, code and unit tests""","""The EAS GitHub repo is very much outdated and needs to be modernized. This also is true for the code and unit tests. Please fix this all."""
"DM-26252","2020/08/05 16:51:34","1.0","240.0","""Create conda build recipe for MTEEC""","""Once the MTECC GitHub repo, code and unit tests have been modernized, the conda recipe can be created as well."""
"DM-26253","2020/08/05 16:52:37","1.0","240.0","""Create conda build recipe for EAS""","""Once the EAS GitHub repo, code and unit tests have been modernized, the conda recipe can be created as well."""
"DM-26255","2020/08/05 16:57:49","2.0","480.0","""Create conda build recipe for HVAC""","""Once the HVAC CSC has been created, the conda recipe can be created as well."""
"DM-26323","2020/08/14 19:19:06","2.0","960.0","""Attend the PCW 2020""","""This ticket is to track the time spent on attenbding the PCW."""
"DM-26374","2020/08/18 19:18:30","2.0","960.0","""Add events to Dome CSC""","""Make sure that the Dome CSC sends events whenever a command gets executed and in all other situations."""
"DM-26514","2020/08/28 14:54:33","4.0","2220.0","""Replace pyqtgraph usage in ScatteredPlot with native PySide2/QtGraphics""","""After success with replacing pyqtgraphs with PySide2/QtCharts, it makes sense to replace pyqtgraphs scatter plotting of the M1M3 with native PySide2 solution.    That shall give much better visualization options, enables zooming/submenu on actuators, etc."""
"DM-26626","2020/09/08 14:43:48","2.0","960.0","""Install latest version of GPhoto2 in Docker for All-Sky Camera""","""The version of GPhoto2 that comes with Centos 7 by default doesn't have good support for the Canon EOS 5D Mark IV camera and the latest version in GitHub does. This ticket is to make sure that the Dockerfile for the Canon camera supports that."""
"DM-26628","2020/09/08 18:07:04","2.0","720.0","""Replace sleep with conditional variable in Controller thread, C++11 solutions for threads etc.""","""M1M3 SS C++ code is:   * locking shared mutex   * trying to get command   * unlocking shared mutex   * if command is valid, executes it   * waits for 100us    Mouch better solution would be to use contional variable, linked to queue size, which will be trigged as new element is added and execute method would wait for CV trigger. This will remove need for sleep and continuously checking for queue content. As the queue is private in the Controller class, managed by public methods, this shall be easy to provide.    As a side improvement, threading structure of the M1M3 SS main code can be improved using C++11 STL provided threading constructs. I will try to do this as well."""
"DM-26631","2020/09/08 19:59:16","2.0","960.0","""Create RPi4 CentOS image with Docker pre-installed""","""A standard CentOS 7 image for RPi4 with Docker pre-installed would be very handy to have. This ticket is for creating that image."""
"DM-26648","2020/09/09 16:11:24","2.0","960.0","""Improve All-Sky camera CSC to work properly with python-gphoto2""","""Now that gphoto2 works well from the Docker container, the CSC needs to be improved to work as well. This ticket is to accomplish that."""
"DM-26649","2020/09/09 17:40:11","2.0","480.0","""Create a Docker image for Garry to use for ESS development.""","""For the ESS software development efforts a Docker image similar to the one used to run the CSC is needed. This ticket is for creating that Docker image."""
"DM-26653","2020/09/09 20:24:24","1.0","480.0","""Adjust DCS and the mock controller to a change in the configuration protocol""","""EIE have proposed a change in the status reporting. This ticket is for implementing the changes in both the Dome CSC and the mock controller and also to update the documentation accordingly."""
"DM-26665","2020/09/10 17:19:51","1.0","480.0","""Integrate multi-channel ESS code into CSC""","""The ESS 4 channel temperature code has been modified to support N channels, with N configurable. This ticket is for integrating that code into the ESS CSC."""
"DM-26704","2020/09/14 12:18:18","4.0","3360.0","""Adds unit tests for mirror safety checks""","""Implements unit tests showing that excessive forces, violating mirror safety limits, are properly flagged as rejected."""
"DM-26833","2020/09/22 12:21:23","2.0","480.0","""Create Windows VM for testing EIE LabVIEW code""","""In order to be able to test the EIE LabVIEW code, a Windows VM with LabVIEW 2018 SP1 is needed. This ticket covers the time spent on that."""
"DM-26959","2020/09/28 20:20:21","2.0","60.0","""Migrate Environment CSC to SALOBJ 6""","""The Environment (WeatherStation) CSC was created some time ago. Now that SALOBJ 6 is about to be released, the code needs to be migrated to that version. This ticket is for doing that."""
"DM-26960","2020/09/28 20:21:29","1.0","60.0","""Migrate DIMM CSC to SALOBJ 6""","""The DIMM CSC was created some time ago. Now that SALOBJ 6 is about to be released, the code needs to be migrated to that version. This ticket is for doing that."""
"DM-26977","2020/09/29 18:41:24","2.0","960.0","""Move to source code M1M3 actuators configuration (xyz positions, type,..)""","""Configuration of static M1M3 FA data (xyz position, actuator ID, actuator type) is stored in configuration file. After installation, those data aren't supposed to change at all. It will be much better to move the values into a structure in source code, the same way LBTO organizes stores those values."""
"DM-27059","2020/10/05 15:04:32","2.0","660.0","""Fix M1M3 simulator dockerfile""","""M1M3 simulator cannot be build be with develop-env:latest/b106. There are some strange dependency problems, which needs to be fixed so the simulator with latest .xml files (including changes of rejected* to preclipped*, see DM-26977."""
"DM-27079","2020/10/06 16:27:22","1.0","240.0","""Docker container for M1M3 GUI""","""Create docker environment to run M1M3 GUI."""
"DM-27155","2020/10/13 13:08:53","1.0","480.0","""Test HVAC connectivity.""","""Now that the HVAC machine has been restarted, test the connectivity and verify that the MQTT server can be reached again and that it publishes telemetry."""
"DM-27156","2020/10/13 13:11:34","1.0","960.0","""Test the renewed ESS CSC at the Recinto""","""The renewed ESS CSC has not been tested yet at the Recinto because the thermal sensors appear to be offline. This ticket is for tracking the ESS test activities."""
"DM-27196","2020/10/16 13:13:54","1.0","960.0","""Update ESS disk image to include libftdi""","""In order to be able to use pylibftdi, libftdi is needed as well. This ticket is for adding that library to the RPi4 disk image."""
"DM-27198","2020/10/16 18:51:45","1.0","480.0","""Revert ESS CSC to be compatible with summit software stack""","""The ESS CSC needs to be reverted to be compatible with the following software versions:    SAL v4.0.0  XML v 4.6.0  SalObj v5.3.0    This should be done on the Raspberry Pi at the BDC (base data center)."""
"DM-27249","2020/10/21 12:33:47","1.0","480.0","""Make sure that HVAC CSC can connect to the MQTT server""","""The HVAC CSC so far only contains a simulator. Now that the HVAC MQTT server has been restarted, code can be added to connect to it. This ticket is for that."""
